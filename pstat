#!/bin/bash 
# plist <list>

. lib-prj
home=$(home) # echo home: $home
host=$(host) # echo host: $host
repos=$1; repos=$(get_repos $repos) # echo repos: $repos

for prj in $(cat $home/.cfg/$host/$repos.list | tr -d '\r'); do 
	path=`sed -E -n 's/^path=([^#]+).*/\1/p' $home/.cfg/$host/$prj | tr -d '\r'` # sed -E -n 's/^path=([^#]+)/\1/p' /Users/a.bysov/prj/utils-vcs/.cfg/ok/ue
	
	(
	eval cd "$path"
	changes=$(gis | wc -l)	# echo changes: $changes
	if [ $changes -eq 0 ]; then
		echo -e "${grey}$prj: $path${norm}"
	  else
		echo -e "\n${grey_back} $prj: $path ${norm}"
		git status -s --untracked-files
	  fi
	git fetch
	LOCAL=$(git rev-parse @)
	REMOTE=$(git rev-parse @{u})
	BASE=$(git merge-base @ @{u})
	#echo LOCAL:$LOCAL REMOTE:$REMOTE BASE:$BASE
	if [ $LOCAL = $REMOTE ]; then
	    #echo "Up-to-date"
	    true
	elif [ $LOCAL = $BASE ]; then
	    echo -e "+${yellow}+ Need to pull !${norm}"
	elif [ $REMOTE = $BASE ]; then
	    #echo "Need to push"
	    true
	else
	    echo -e "${red}Diverged !!${norm}"
	fi
	[ $changes -ne 0 ] && echo
	)
  done

